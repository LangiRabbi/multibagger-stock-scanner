# 📋 PRODUCT REQUIREMENTS DOCUMENT (PDR)
## Multibagger Scanner - AI-Powered Stock Analysis Platform

**Version:** 1.0  
**Date:** October 7, 2025  
**Status:** DRAFT → APPROVED  
**Owner:** PM Agent

---

## 1. EXECUTIVE SUMMARY

### 1.1 Product Vision
Build an automated stock screening and portfolio monitoring platform that identifies potential "multibagger" stocks (10x+ returns) using academic research-backed quantitative metrics, and alerts users to sell signals to protect gains.

### 1.2 Target Users
- Individual retail investors
- Small investment clubs
- Active traders interested in fundamental analysis
- Long-term growth investors

### 1.3 Core Value Proposition
- **Automated Screening**: Daily/weekly scans of 500+ stocks against 10 proven metrics
- **Research-Backed**: Based on academic studies analyzing 464 multibagger stocks
- **Smart Alerts**: Proactive buy/sell signals with scoring system
- **Portfolio Tracking**: Real-time monitoring with risk management

---

## 2. FUNCTIONAL REQUIREMENTS

### 2.1 Stock Screening System

#### FR-1: Universe Management
- System shall maintain a universe of 500-2000 stocks (Small/Mid Cap)
- Automatic monthly updates from Russell 2000, S&P 600
- Manual ticker addition/removal by admin
- Filter criteria: Market Cap $50M-$5B, Min volume 100k/day, Price > $5

#### FR-2: Weekly Comprehensive Scan
- Runs every Friday at 18:00 EST
- Fetches fundamental data for all universe stocks
- Calculates 10 key metrics per stock:
  1. Market Cap
  2. ROE (Return on Equity)
  3. ROCE (Return on Capital Employed)
  4. Forward P/E Ratio
  5. P/FCF (Price to Free Cash Flow)
  6. Debt-to-Equity Ratio
  7. Revenue Growth (3Y CAGR)
  8. Earnings Growth (3Y CAGR)
  9. Profit Margins
  10. Piotroski F-Score
- Generates BUY SCORE (0-20 points)
- Stores results in database with timestamp
- Execution time: < 20 minutes for 500 tickers

#### FR-3: Scoring Algorithm
**BUY SCORE Calculation:**
- Market Cap $50M-$2B: +2 points
- ROE > 15%: +2 points
- ROCE > 15%: +2 points
- Forward P/E < 15: +2 points
- P/FCF < 15: +3 points ⭐
- D/E < 0.3: +2 points
- Revenue Growth > 15% CAGR: +3 points ⭐
- Earnings Growth > 15%: +2 points
- Short Interest < 5%: +1 point
- Piotroski Score >= 7: +1 point

**Result Categories:**
- Score >= 16: STRONG BUY
- Score 12-15: BUY
- Score 8-11: WATCH LIST
- Score < 8: IGNORE

### 2.2 Portfolio Management

#### FR-4: Position Tracking
- User can add positions: ticker, entry date, entry price, shares
- System automatically fetches current price daily
- Tracks peak price (highest since entry)
- Calculates: Current value, P&L %, % from peak
- Status: Active, Sold, Watching

#### FR-5: Daily Portfolio Monitoring
- Runs daily at 16:30 EST (after market close)
- For each active position:
  - Fetch current price
  - Calculate technical indicators (RSI, MA200)
  - Update % from peak (for stop loss tracking)
  - Calculate SELL SCORE
- Generate alerts if thresholds exceeded
- Execution time: < 5 minutes for 50 positions

#### FR-6: Sell Signal Detection
**SELL SCORE Calculation:**
- Stop Loss triggered (-20% from peak): +15 points (IMMEDIATE SELL)
- Short Interest spike (+5pp in month): +4 points
- RSI > 75: +2 points
- Price < MA200 for 5 days: +3 points
- P/E > 50: +3 points
- Revenue Growth < 15% for 2 quarters: +4 points
- Momentum crash risk detected: +5 points

**Actions:**
- Score >= 10: SELL alert (URGENT)
- Score 6-9: REDUCE position (50%)
- Score 3-5: WATCH closely
- Score < 3: HOLD

### 2.3 Alert System

#### FR-7: Alert Types
1. **BUY Signal**: New candidate found (score >= 16)
2. **SELL Signal**: Position triggered sell score >= 10
3. **REDUCE Signal**: Position needs trimming (score 6-9)
4. **MOMENTUM CRASH**: Market-wide risk detected
5. **EARNINGS Update**: Quarterly results for portfolio stock

#### FR-8: Alert Delivery
- **In-App**: Notification banner + alerts page
- **Email**: Formatted HTML with details
- **Slack** (optional): Webhook integration
- **SMS** (future): Twilio for URGENT only

#### FR-9: Alert Configuration
- User preferences: enable/disable channels per alert type
- Quiet hours: no emails between 22:00-08:00
- Digest mode: daily summary instead of real-time

### 2.4 Market Monitoring

#### FR-10: Momentum Crash Detection
- Monitors hourly during market hours (9:30-16:00 EST)
- Tracks: S&P 500 price, VIX level, Buffett Indicator
- Risk factors:
  - S&P drops > 5% in 1-3 days
  - VIX spike > 30
  - Buffett Indicator > 200%
- Generates CRASH RISK SCORE (0-10)
- Alerts all users if score >= 7

#### FR-11: Earnings Calendar Integration
- Webhook receiver for earnings announcements
- Checks if ticker is in any user's portfolio
- Fetches actual vs expected EPS and revenue
- Analyzes growth deceleration
- Updates sell score if disappointed

### 2.5 User Interface

#### FR-12: Dashboard Page
**Components:**
1. Portfolio Summary Card
   - Total value, Today's P&L, Overall P&L %
   - # of positions, # of alerts
2. Top Candidates Table (last scan)
   - Ticker, Buy Score, Key metrics, Add to Portfolio button
3. Recent Alerts Panel
   - Last 5 alerts, severity color coding
4. Market Indicators Card
   - S&P 500, VIX, Buffett Indicator, Risk level

#### FR-13: Scanner Page
**Features:**
- Latest scan results table (all candidates)
- Filters: Min score, sector, market cap range
- Sorting: by score, ROE, revenue growth, etc.
- Click row → detailed modal with all metrics
- Export to CSV button
- Trigger new scan button (manual)

#### FR-14: Portfolio Page
**Layout:**
- Summary cards: Total value, # positions, Win rate
- Positions table:
  - Ticker, Entry date, Shares, Entry price
  - Current price, Current value, P&L %
  - % from peak, Buy score, Sell score
  - Action needed (SELL/REDUCE/HOLD)
- Click position → detail view:
  - Price chart with entry marker
  - Full metrics breakdown
  - Sell score breakdown
  - Update/Close position buttons

#### FR-15: Alerts Page
- Filterable list (type, severity, read/unread)
- Mark as read/unread
- Delete alert
- Sort by date
- Severity badges: 🔴 URGENT, 🟡 HIGH, 🔵 MEDIUM, ⚪ LOW

#### FR-16: Settings Page
- Alert preferences (channels, types)
- API key management (if user provides own)
- Portfolio settings (default stop loss %)
- Data refresh settings
- Export data

### 2.6 Admin Features

#### FR-17: Admin Dashboard
- System health monitoring
- Scan execution history and status
- API usage stats (calls remaining)
- Error logs
- User activity stats

#### FR-18: Manual Controls
- Trigger scans manually
- Update universe
- Retry failed jobs
- Clear caches

---

## 3. NON-FUNCTIONAL REQUIREMENTS

### 3.1 Performance
- NFR-1: Dashboard page load < 2 seconds
- NFR-2: API responses < 200ms (95th percentile)
- NFR-3: Weekly scan completes in < 20 minutes
- NFR-4: Support 100 concurrent users

### 3.2 Reliability
- NFR-5: System uptime 99.5%
- NFR-6: Automated job success rate > 98%
- NFR-7: Data backup daily
- NFR-8: Graceful handling of external API failures

### 3.3 Security
- NFR-9: Authentication required for all endpoints
- NFR-10: API keys encrypted at rest
- NFR-11: HTTPS only for all communications
- NFR-12: Rate limiting: 100 req/min per user
- NFR-13: SQL injection prevention via ORM

### 3.4 Scalability
- NFR-14: Horizontal scaling for API servers
- NFR-15: Database supports 1M+ scan results
- NFR-16: Redis caching for frequently accessed data
- NFR-17: Async job processing via Celery

### 3.5 Maintainability
- NFR-18: Code coverage > 80%
- NFR-19: All functions have docstrings
- NFR-20: API documentation (OpenAPI/Swagger)
- NFR-21: Logging for all critical operations

### 3.6 Usability
- NFR-22: Mobile responsive design
- NFR-23: Accessible (WCAG 2.1 AA)
- NFR-24: Intuitive navigation (< 3 clicks to any feature)
- NFR-25: Loading indicators for all async operations

---

## 4. TECHNICAL ARCHITECTURE

### 4.1 Technology Stack

**Frontend:**
- Framework: Next.js 14 (App Router)
- Language: TypeScript
- UI Library: shadcn/ui + TailwindCSS
- State: React Query (TanStack Query)
- Charts: Recharts
- Tables: TanStack Table

**Backend:**
- Framework: FastAPI (Python 3.11+)
- ORM: SQLAlchemy 2.0
- Validation: Pydantic v2
- API Docs: OpenAPI/Swagger

**Database:**
- Primary: PostgreSQL 15
- Cache: Redis 7

**Jobs:**
- Queue: Celery
- Broker: Redis
- Scheduler: Celery Beat

**Authentication:**
- Provider: Clerk

**External APIs:**
- Alpha Vantage (free tier: 25 calls/day)
- Financial Modeling Prep (free tier: 250 calls/day)
- yfinance (Python library, unlimited)
- FRED API (economic data)

**Deployment:**
- Frontend: Vercel
- Backend: Railway
- Database: Railway PostgreSQL
- Redis: Railway Redis

### 4.2 System Architecture

```
┌─────────────┐
│   Browser   │
└──────┬──────┘
       │ HTTPS
┌──────▼────────────┐
│   Next.js App     │
│   (Vercel)        │
└──────┬────────────┘
       │ REST API
┌──────▼────────────┐       ┌─────────────┐
│   FastAPI         │◄──────┤  PostgreSQL │
│   (Railway)       │       │  (Railway)  │
└──────┬────────────┘       └─────────────┘
       │
       │ Jobs Queue
┌──────▼────────────┐       ┌─────────────┐
│  Celery Worker    │◄──────┤   Redis     │
│  + Beat Scheduler │       │  (Railway)  │
└──────┬────────────┘       └─────────────┘
       │
       │ External APIs
┌──────▼────────────┐
│  Alpha Vantage    │
│  FMP, yfinance    │
│  FRED             │
└───────────────────┘
```

### 4.3 Database Schema

**Key Tables:**
- `users` - User accounts
- `stocks` - Stock universe
- `portfolio_positions` - User holdings
- `scan_results` - Screening results
- `alerts` - Generated alerts
- `market_indicators` - Daily market data
- `scan_history` - Job execution logs

(Full schema in separate document)

---

## 5. DATA SOURCES & METRICS

### 5.1 Primary Data Sources

**Alpha Vantage API:**
- Endpoint: OVERVIEW
- Data: Market cap, P/E, ROE, margins, revenue growth
- Rate limit: 25 calls/day (free)
- Fallback: Financial Modeling Prep

**Financial Modeling Prep API:**
- Endpoint: /ratios, /profile, /income-statement
- Data: Financial ratios, company profiles
- Rate limit: 250 calls/day (free)

**yfinance (Python library):**
- Real-time quotes
- Historical prices
- Technical indicators
- No rate limit (best effort)

**FRED API:**
- Economic indicators
- Buffett Indicator components
- Rate limit: Generous (thousands/day)

### 5.2 Calculated Metrics

**Financial Metrics:**
```python
ROE = Net Income / Shareholders Equity
ROCE = EBIT / (Total Assets - Current Liabilities)
P/FCF = Market Cap / Free Cash Flow
FCF = Operating Cash Flow - CapEx
Revenue CAGR = ((Rev_Y3/Rev_Y0)^(1/3) - 1)
```

**Technical Indicators:**
```python
RSI = 100 - (100 / (1 + RS))
RS = Avg Gain (14 days) / Avg Loss (14 days)
MA200 = Sum(Close prices last 200 days) / 200
```

**Composite Scores:**
```python
Piotroski F-Score = Sum of 9 binary criteria (0-9)
Buy Score = Weighted sum of 10 criteria (0-20)
Sell Score = Weighted sum of 7 criteria (0-15)
```

---

## 6. USER STORIES

### Epic 1: Stock Discovery
- US-1: As a user, I want to see weekly scan results so I can discover new investment opportunities
- US-2: As a user, I want to filter candidates by score/sector so I can focus on my preferences
- US-3: As a user, I want detailed metrics for each candidate so I can make informed decisions
- US-4: As a user, I want to export candidates to CSV so I can analyze offline

### Epic 2: Portfolio Management
- US-5: As a user, I want to add positions to my portfolio so I can track them
- US-6: As a user, I want to see current P&L for each position so I know my performance
- US-7: As a user, I want visual indicators for sell signals so I don't miss warnings
- US-8: As a user, I want position detail view with charts so I can analyze trends

### Epic 3: Alerts & Monitoring
- US-9: As a user, I want email alerts for urgent sell signals so I can act quickly
- US-10: As a user, I want to see alert history so I can review past signals
- US-11: As a user, I want to configure alert preferences so I control notification volume
- US-12: As a user, I want momentum crash warnings so I can protect portfolio in downturns

### Epic 4: Analysis & Reporting
- US-13: As a user, I want to see my overall portfolio performance so I track progress
- US-14: As a user, I want to compare my returns vs S&P 500 so I benchmark success
- US-15: As a user, I want to see win rate and avg return so I assess strategy effectiveness

---

## 7. SUCCESS METRICS

### 7.1 Product Metrics
- **Engagement**: DAU/MAU ratio > 0.4
- **Retention**: 30-day retention > 60%
- **Scan Quality**: > 5 candidates per scan (score >= 16)
- **Alert Accuracy**: Sell signals followed by 10%+ drop (backtest)

### 7.2 Technical Metrics
- **API Response Time**: p95 < 200ms
- **Job Success Rate**: > 98%
- **Uptime**: > 99.5%
- **Error Rate**: < 0.5%

### 7.3 Business Metrics
- **User Growth**: 100 users in first 3 months
- **Conversion**: 20% of users add >= 5 positions
- **Referral**: 15% of users invite others

---

## 8. CONSTRAINTS & ASSUMPTIONS

### 8.1 Constraints
- **Budget**: $50/month maximum for infrastructure
- **API Limits**: Free tier APIs only (first 3 months)
- **Team**: Solo developer + AI agents (Cursor)
- **Timeline**: MVP in 2 weeks

### 8.2 Assumptions
- Users understand basic stock investing concepts
- Users have access to brokerage accounts separately
- Historical data from 2009-2024 is sufficient for backtesting
- Academic research criteria remain valid going forward

### 8.3 Out of Scope (v1.0)
- Actual trading execution
- Options/derivatives analysis
- International markets (non-US)
- Social features (forums, chat)
- Mobile native apps
- Backtesting engine
- AI-generated investment theses

---

## 9. RISKS & MITIGATIONS

| Risk | Impact | Probability | Mitigation |
|------|--------|-------------|------------|
| API rate limits exhausted | High | Medium | Multiple API providers, caching, batching |
| External API downtime | Medium | Medium | Fallback providers, retry logic |
| Inaccurate data | High | Low | Cross-validate from 2 sources |
| Poor scan performance | Medium | Low | Optimize queries, add indexes, caching |
| Security breach | High | Low | Auth, encryption, rate limiting |
| Market structure changes | Medium | Low | Quarterly review of criteria |

---

## 10. LAUNCH PLAN

### Phase 1: MVP (Week 1-2)
- Core scanning engine
- Portfolio tracking
- Email alerts
- Basic dashboard UI
- **Success Criteria**: Can run weekly scan and track 10 positions

### Phase 2: Enhancement (Week 3-4)
- Advanced UI features
- Slack integration
- Performance optimization
- Comprehensive testing
- **Success Criteria**: 10 beta users actively using

### Phase 3: Launch (Week 5-6)
- Production deployment
- Documentation
- Marketing site
- User onboarding
- **Success Criteria**: 50 active users

### Phase 4: Iteration (Month 2-3)
- User feedback incorporation
- Feature additions
- Performance tuning
- Scale infrastructure
- **Success Criteria**: 100 active users, positive feedback

---

## 11. OPEN QUESTIONS

1. Should we support multiple portfolios per user?
2. What should be the default stop loss percentage?
3. Should we show stocks that fail screening (to learn what not to buy)?
4. How long to retain scan results (storage cost)?
5. Should we support paper trading mode?

---

## 12. APPENDICES

### Appendix A: Research References
- Yartseva, A. (2025). "The Alchemy of Multibagger Stocks"
- Daniel & Moskowitz (2016). "Momentum Crashes"
- Chabot, Ghysels, Jagannathan (2014). "Momentum Trading, Return Chasing, and Predictable Crashes"

### Appendix B: Glossary
- **Multibagger**: Stock that returns multiple times the initial investment
- **CAGR**: Compound Annual Growth Rate
- **ROE**: Return on Equity
- **ROCE**: Return on Capital Employed
- **P/FCF**: Price to Free Cash Flow
- **RSI**: Relative Strength Index
- **MA200**: 200-day Moving Average

### Appendix C: API Documentation Links
- Alpha Vantage: https://www.alphavantage.co/documentation/
- Financial Modeling Prep: https://site.financialmodelingprep.com/developer/docs/
- FRED: https://fred.stlouisfed.org/docs/api/

---

**APPROVAL:**
- [x] PM Agent - October 7, 2025
- [ ] Engineering Lead - Pending
- [ ] QA Lead - Pending

**DOCUMENT CONTROL:**
- Last Updated: October 7, 2025
- Next Review: October 21, 2025
- Version History: v1.0 (Initial)