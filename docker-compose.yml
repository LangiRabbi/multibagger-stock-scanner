version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: multibagger-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-multibagger}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: multibagger-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend (będzie dodany w następnym kroku)
  # backend:
  #   build: ./backend
  #   container_name: multibagger-backend
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-multibagger}
  #     REDIS_URL: redis://redis:6379
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ./backend:/app

  # Next.js Frontend (będzie dodany w następnym kroku)
  # frontend:
  #   build: ./frontend
  #   container_name: multibagger-frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NEXT_PUBLIC_API_URL: http://localhost:8000
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app

volumes:
  postgres-data:
  redis-data:
